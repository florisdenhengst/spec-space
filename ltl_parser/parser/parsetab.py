
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIMPLICATIONleftDOUBLE_IMPLICATIONleftORleftANDleftGEGEQLELEQEQUALITYleftUNTILRELEASEWEAK_UNTILrightGLOBALLYEVENTUALLYleftADDSUBleftMULDIVrightNOTNEXTCONSTANTLITERAL CONSTANT AND OR NOT IMPLICATION DOUBLE_IMPLICATION EQUALITY GLOBALLY EVENTUALLY NEXT VAR_NEXT UNTIL RELEASE WEAK_UNTIL LPAREN RPAREN TRUE FALSE GE GEQ LE LEQ ADD SUB MUL DIVexpr : expr AND exprexpr : expr OR exprexpr : NOT exprexpr : expr IMPLICATION exprexpr : expr DOUBLE_IMPLICATION exprexpr : expr EQUALITY exprexpr : GLOBALLY exprexpr : EVENTUALLY exprexpr : NEXT exprexpr : NEXT CONSTANT expr %prec CONSTANTexpr : expr UNTIL exprexpr : expr RELEASE exprexpr : expr WEAK_UNTIL exprexpr : propprop : TRUEprop : FALSEexpr : LPAREN expr RPARENprop : LPAREN prop RPARENprop : prop GE propprop : prop GEQ propprop : prop LE propprop : prop LEQ propprop : prop ADD propprop : prop SUB propprop : prop MUL propprop : prop DIV propprop : unaryunary : CONSTANTunary : SUB CONSTANTunary : LITERALunary : SUB LITERAL'
    
_lr_action_items = {'CONSTANT':([0,2,4,8,9,10,13,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,36,37,40,],[1,15,1,25,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'SUB':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,20,21,22,23,24,25,28,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,59,],[2,-28,-27,2,19,-15,-30,2,2,2,-16,2,-31,-29,2,2,2,2,2,2,2,2,-28,19,2,2,2,2,2,2,2,2,19,2,19,-24,-23,19,19,-25,-26,-18,19,]),'GLOBALLY':([0,4,8,9,10,13,25,30,31,32,33,34,35,36,37,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'MUL':([1,3,5,6,7,11,14,15,25,28,39,41,42,43,44,45,46,47,49,59,],[-28,-27,23,-15,-30,-16,-31,-29,-28,23,23,23,23,23,23,23,-25,-26,-18,23,]),'DIV':([1,3,5,6,7,11,14,15,25,28,39,41,42,43,44,45,46,47,49,59,],[-28,-27,24,-15,-30,-16,-31,-29,-28,24,24,24,24,24,24,24,-25,-26,-18,24,]),'TRUE':([0,4,8,9,10,13,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,36,37,40,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'GEQ':([1,3,5,6,7,11,14,15,25,28,39,41,42,43,44,45,46,47,49,59,],[-28,-27,17,-15,-30,-16,-31,-29,-28,17,-20,-21,-24,-23,-22,-19,-25,-26,-18,17,]),'LE':([1,3,5,6,7,11,14,15,25,28,39,41,42,43,44,45,46,47,49,59,],[-28,-27,18,-15,-30,-16,-31,-29,-28,18,-20,-21,-24,-23,-22,-19,-25,-26,-18,18,]),'EQUALITY':([1,3,5,6,7,11,12,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,32,-31,-29,-7,-28,-9,-8,-14,32,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,32,32,-6,-11,-12,32,32,-13,]),'LITERAL':([0,2,4,8,9,10,13,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,36,37,40,],[7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'NEXT':([0,4,8,9,10,13,25,30,31,32,33,34,35,36,37,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,3,5,6,7,11,12,14,15,16,25,26,27,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,0,-31,-29,-7,-28,-9,-8,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,-1,-5,-6,-11,-12,-4,-2,-13,]),'EVENTUALLY':([0,4,8,9,10,13,25,30,31,32,33,34,35,36,37,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'GE':([1,3,5,6,7,11,14,15,25,28,39,41,42,43,44,45,46,47,49,59,],[-28,-27,22,-15,-30,-16,-31,-29,-28,22,-20,-21,-24,-23,-22,-19,-25,-26,-18,22,]),'LPAREN':([0,4,8,9,10,13,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,36,37,40,],[10,10,10,10,10,10,40,40,40,40,40,40,40,40,10,10,10,10,10,10,10,10,10,40,]),'RELEASE':([1,3,5,6,7,11,12,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,34,-31,-29,-7,-28,-9,-8,-14,34,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,34,34,34,-11,-12,34,34,-13,]),'RPAREN':([1,3,5,6,7,11,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-28,-27,-14,-15,-30,-16,-31,-29,-7,-28,-9,-8,49,50,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,-1,-5,-6,-11,-12,-4,-2,-13,49,]),'IMPLICATION':([1,3,5,6,7,11,12,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,35,-31,-29,-7,-28,-9,-8,-14,35,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,-1,-5,-6,-11,-12,35,-2,-13,]),'UNTIL':([1,3,5,6,7,11,12,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,33,-31,-29,-7,-28,-9,-8,-14,33,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,33,33,33,-11,-12,33,33,-13,]),'WEAK_UNTIL':([1,3,5,6,7,11,12,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,37,-31,-29,-7,-28,-9,-8,-14,37,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,37,37,37,-11,-12,37,37,-13,]),'AND':([1,3,5,6,7,11,12,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,30,-31,-29,-7,-28,-9,-8,-14,30,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,-1,30,-6,-11,-12,30,30,-13,]),'DOUBLE_IMPLICATION':([1,3,5,6,7,11,12,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,31,-31,-29,-7,-28,-9,-8,-14,31,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,-1,-5,-6,-11,-12,31,-2,-13,]),'FALSE':([0,4,8,9,10,13,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,36,37,40,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ADD':([1,3,5,6,7,11,14,15,25,28,39,41,42,43,44,45,46,47,49,59,],[-28,-27,20,-15,-30,-16,-31,-29,-28,20,20,20,-24,-23,20,20,-25,-26,-18,20,]),'LEQ':([1,3,5,6,7,11,14,15,25,28,39,41,42,43,44,45,46,47,49,59,],[-28,-27,21,-15,-30,-16,-31,-29,-28,21,-20,-21,-24,-23,-22,-19,-25,-26,-18,21,]),'NOT':([0,4,8,9,10,13,25,30,31,32,33,34,35,36,37,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'OR':([1,3,5,6,7,11,12,14,15,16,25,26,27,28,29,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-14,-15,-30,-16,36,-31,-29,-7,-28,-9,-8,-14,36,-3,-20,-21,-24,-23,-22,-19,-25,-26,-10,-18,-17,-1,36,-6,-11,-12,36,-2,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'unary':([0,4,8,9,10,13,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,36,37,40,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr':([0,4,8,9,10,13,25,30,31,32,33,34,35,36,37,],[12,16,26,27,29,38,48,51,52,53,54,55,56,57,58,]),'prop':([0,4,8,9,10,13,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,36,37,40,],[5,5,5,5,28,5,39,41,42,43,44,45,46,47,5,5,5,5,5,5,5,5,5,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> expr AND expr','expr',3,'p_expr_and','parser.py',29),
  ('expr -> expr OR expr','expr',3,'p_expr_or','parser.py',33),
  ('expr -> NOT expr','expr',2,'p_expr_not','parser.py',38),
  ('expr -> expr IMPLICATION expr','expr',3,'p_expr_implies','parser.py',42),
  ('expr -> expr DOUBLE_IMPLICATION expr','expr',3,'p_expr_iff','parser.py',46),
  ('expr -> expr EQUALITY expr','expr',3,'p_expr_equals','parser.py',50),
  ('expr -> GLOBALLY expr','expr',2,'p_expr_globally','parser.py',58),
  ('expr -> EVENTUALLY expr','expr',2,'p_expr_eventually','parser.py',64),
  ('expr -> NEXT expr','expr',2,'p_expr_next','parser.py',68),
  ('expr -> NEXT CONSTANT expr','expr',3,'p_expr_multinext','parser.py',77),
  ('expr -> expr UNTIL expr','expr',3,'p_expr_until','parser.py',93),
  ('expr -> expr RELEASE expr','expr',3,'p_expr_release','parser.py',97),
  ('expr -> expr WEAK_UNTIL expr','expr',3,'p_expr_weak_until','parser.py',101),
  ('expr -> prop','expr',1,'p_expr_prop','parser.py',105),
  ('prop -> TRUE','prop',1,'p_prop_true','parser.py',109),
  ('prop -> FALSE','prop',1,'p_prop_false','parser.py',113),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parenthesis','parser.py',117),
  ('prop -> LPAREN prop RPAREN','prop',3,'p_prop_parenthesis','parser.py',121),
  ('prop -> prop GE prop','prop',3,'p_prop_ge','parser.py',125),
  ('prop -> prop GEQ prop','prop',3,'p_prop_geq','parser.py',129),
  ('prop -> prop LE prop','prop',3,'p_prop_le','parser.py',135),
  ('prop -> prop LEQ prop','prop',3,'p_prop_leq','parser.py',139),
  ('prop -> prop ADD prop','prop',3,'p_prop_add','parser.py',143),
  ('prop -> prop SUB prop','prop',3,'p_prop_sub','parser.py',147),
  ('prop -> prop MUL prop','prop',3,'p_prop_mul','parser.py',153),
  ('prop -> prop DIV prop','prop',3,'p_prop_div','parser.py',157),
  ('prop -> unary','prop',1,'p_prop_unary','parser.py',161),
  ('unary -> CONSTANT','unary',1,'p_unary_pos','parser.py',165),
  ('unary -> SUB CONSTANT','unary',2,'p_unary_neg','parser.py',175),
  ('unary -> LITERAL','unary',1,'p_unary_literal','parser.py',185),
  ('unary -> SUB LITERAL','unary',2,'p_unary_neg_literal','parser.py',191),
]
